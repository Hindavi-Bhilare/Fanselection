
package com.velotech.fanselection.models;
// Generated May 2, 2019 12:45:56 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.ParamDef;

/**
 * Tbl26OfferPump generated by hbm2java
 */
@Entity
@Table(name = "tbl_26_offerFan")
@FilterDef(name = "company", parameters = { @ParamDef(name = "company", type = "java.lang.String") })
@Filter(name = "company", condition = ":company= company ")
public class Tbl26OfferFan implements java.io.Serializable {

	private int id;

	private Tbl23OfferRev tbl23OfferRev;

	private Tbl26OfferFan tbl26OfferFan;

	private String customerOrderRef;

	private String tagNo;

	private String status;

	private String remarks;

	private String reason;

	private String lostTo;

	private String fanSelectionType;

	private Double orderPrice;

	private Boolean verticalLogic;

	private Boolean showDiscount;

	private Double lineTotal;

	private Double addonTotal;

	private Double total;

	private String createdBy;

	private Date createdDate;

	private String modifiedBy;

	private Date modifiedDate;

	private String company;

	private Tbl27RequirementsDp tbl27RequirementsDp;

	private Tbl28SelectedFan tbl28SelectedFan;

	private Tbl28SelectedPrimemover tbl28SelectedPrimemover;

//	private Tbl28SelectedVertical tbl28SelectedVertical;

	private Tbl27OfferFanDp tbl27OfferFanDp;
	
	private Tbl28SelectedFanJsonValue tbl28SelectedFanJsonValue;

	public Tbl26OfferFan() {
	}

	public Tbl26OfferFan(int id) {
		this.id = id;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {

		return this.id;
	}

	public void setId(int id) {

		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "offerId")
	public Tbl23OfferRev getTbl23OfferRev() {

		return this.tbl23OfferRev;
	}

	public void setTbl23OfferRev(Tbl23OfferRev tbl23OfferRev) {

		this.tbl23OfferRev = tbl23OfferRev;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "masterOfferFanId")
	public Tbl26OfferFan getTbl26OfferFan() {

		return this.tbl26OfferFan;
	}

	public void setTbl26OfferFan(Tbl26OfferFan tbl26OfferFan) {

		this.tbl26OfferFan = tbl26OfferFan;
	}


	@Column(name = "customerOrderRef")
	public String getCustomerOrderRef() {

		return this.customerOrderRef;
	}

	public void setCustomerOrderRef(String customerOrderRef) {

		this.customerOrderRef = customerOrderRef;
	}

	@Column(name = "tagNo", length = 50)
	public String getTagNo() {

		return this.tagNo;
	}

	public void setTagNo(String tagNo) {

		this.tagNo = tagNo;
	}

	@Column(name = "status", length = 50)
	public String getStatus() {

		return this.status;
	}

	public void setStatus(String status) {

		this.status = status;
	}

	@Column(name = "remarks")
	public String getRemarks() {

		return this.remarks;
	}

	public void setRemarks(String remarks) {

		this.remarks = remarks;
	}

	@Column(name = "reason")
	public String getReason() {

		return this.reason;
	}

	public void setReason(String reason) {

		this.reason = reason;
	}

	@Column(name = "lostTo")
	public String getLostTo() {

		return this.lostTo;
	}

	public void setLostTo(String lostTo) {

		this.lostTo = lostTo;
	}

	@Column(name = "fanSelectionType", length = 50)
	public String getFanSelectionType() {

		return this.fanSelectionType;
	}

	public void setFanSelectionType(String fanSelectionType) {

		this.fanSelectionType = fanSelectionType;
	}

	@Column(name = "orderPrice", precision = 18)
	public Double getOrderPrice() {

		return this.orderPrice;
	}

	public void setOrderPrice(Double orderPrice) {

		this.orderPrice = orderPrice;
	}

	@Column(name = "verticalLogic")
	public Boolean getVerticalLogic() {

		return this.verticalLogic;
	}

	public void setVerticalLogic(Boolean verticalLogic) {

		this.verticalLogic = verticalLogic;
	}

	@Column(name = "showDiscount")
	public Boolean getShowDiscount() {

		return this.showDiscount;
	}

	public void setShowDiscount(Boolean showDiscount) {

		this.showDiscount = showDiscount;
	}

	@Column(name = "lineTotal", precision = 18)
	public Double getLineTotal() {

		return this.lineTotal;
	}

	public void setLineTotal(Double lineTotal) {

		this.lineTotal = lineTotal;
	}

	@Column(name = "addonTotal", precision = 18)
	public Double getAddonTotal() {

		return this.addonTotal;
	}

	public void setAddonTotal(Double addonTotal) {

		this.addonTotal = addonTotal;
	}

	@Column(name = "total", precision = 18)
	public Double getTotal() {

		return this.total;
	}

	public void setTotal(Double total) {

		this.total = total;
	}

	@Column(name = "createdBy", length = 50)
	public String getCreatedBy() {

		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {

		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "createdDate", length = 10)
	public Date getCreatedDate() {

		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {

		this.createdDate = createdDate;
	}

	@Column(name = "modifiedBy", length = 50)
	public String getModifiedBy() {

		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {

		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "modifiedDate", length = 10)
	public Date getModifiedDate() {

		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {

		this.modifiedDate = modifiedDate;
	}

	@Column(name = "company", length = 50)
	public String getCompany() {

		return this.company;
	}

	public void setCompany(String company) {

		this.company = company;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "tbl26OfferFan")
	public Tbl27RequirementsDp getTbl27RequirementsDp() {

		return this.tbl27RequirementsDp;
	}

	public void setTbl27RequirementsDp(Tbl27RequirementsDp tbl27RequirementsDp) {

		this.tbl27RequirementsDp = tbl27RequirementsDp;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "tbl26OfferFan")
	public Tbl28SelectedFan getTbl28SelectedFan() {

		return this.tbl28SelectedFan;
	}

	public void setTbl28SelectedFan(Tbl28SelectedFan tbl28SelectedFan) {

		this.tbl28SelectedFan = tbl28SelectedFan;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "tbl26OfferFan")
	public Tbl28SelectedPrimemover getTbl28SelectedPrimemover() {

		return this.tbl28SelectedPrimemover;
	}

	public void setTbl28SelectedPrimemover(Tbl28SelectedPrimemover tbl28SelectedPrimemover) {

		this.tbl28SelectedPrimemover = tbl28SelectedPrimemover;
	}


	@OneToOne(fetch = FetchType.LAZY, mappedBy = "tbl26OfferFan")
	public Tbl27OfferFanDp getTbl27OfferFanDp() {

		return tbl27OfferFanDp;
	}

	public void setTbl27OfferFanDp(Tbl27OfferFanDp tbl27OfferFanDp) {

		this.tbl27OfferFanDp = tbl27OfferFanDp;
	}
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "tbl26OfferFan")
	public Tbl28SelectedFanJsonValue getTbl28SelectedFanJsonValue() {

		return this.tbl28SelectedFanJsonValue;
	}

	public void setTbl28SelectedFanJsonValue(Tbl28SelectedFanJsonValue tbl28SelectedFanJsonValue) {

		this.tbl28SelectedFanJsonValue = tbl28SelectedFanJsonValue;
	}
}
